---
- name: Install JVM
  ansible.builtin.apt:
    name: default-jdk
    state: present

- name: Copy deb packets to local
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /tmp
    owner: root
    group: root
    mode: '0775'
    remote_src: yes
#    force: yes
  loop:
    - "/mnt/nfs/install/elk/elasticsearch_8.9.1_amd64-224190-f79e75.deb"
    - "/mnt/nfs/install/elk/filebeat_8.9.1_amd64-224190-bc3f59.deb"
    - "/mnt/nfs/install/elk/kibana_8.9.1_amd64-224190-f7ebba.deb"
    - "/mnt/nfs/install/elk/logstash_8.9.1_amd64-224190-11b1b0.deb"

- name: Install all ELK packets from local
  ansible.builtin.apt:
    deb: "{{ item }}"
    state: present
  loop:
    - "/tmp/elasticsearch_8.9.1_amd64-224190-f79e75.deb"
    - "/tmp/filebeat_8.9.1_amd64-224190-bc3f59.deb"
    - "/tmp/kibana_8.9.1_amd64-224190-f7ebba.deb"
    - "/tmp/logstash_8.9.1_amd64-224190-11b1b0.deb"

- name: Fix broken dependencies and remove unused packages
  ansible.builtin.apt:
    state: fixed
    autoremove: yes

- name: Copy jvm options file
  copy:
    src: jvm.options
    dest: /etc/elasticsearch/jvm.options.d
    owner: root
    group: elasticsearch
    mode: '0644'

- name: Copy elasticsearch config file
  copy:
    src: elasticsearch.yml
    dest: /etc/elasticsearch
    owner: root
    group: elasticsearch
    mode: '0660'

- name: Systemd reload configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start elasticsearch.service
  ansible.builtin.systemd:
    name: elasticsearch.service
    enabled: yes
    state: started

- name: Check elascticsearch in http://localhost:9200 is available
  ansible.builtin.uri:
    url: "http://localhost:9200"
    method: GET
    status_code: 200
  register: curl_result

- name: Debug the result of the curl check
  ansible.builtin.debug:
    var: curl_result

- name: Copy kibana config file
  copy:
    src: kibana.yml
    dest: /etc/kibana
    owner: root
    group: kibana
    mode: '0660'

- name: Systemd reload configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start kibana.service
  ansible.builtin.systemd:
    name: kibana.service
    enabled: yes
    state: started

- name: Copy logstash config file
  copy:
    src: logstash.yml
    dest: /etc/logstash
    owner: root
    group: logstash
    mode: '0660'

- name: Copy logstash-nginx-es.conf file
  copy:
    src: logstash-nginx-es.conf
    dest: /etc/logstash/conf.d
    owner: root
    group: logstash
    mode: '0664'

- name: Systemd reload configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start logstash.service
  ansible.builtin.systemd:
    name: logstash.service
    enabled: yes
    state: started

- name: Ensure Logstash service is running
  ansible.builtin.systemd:
    name: logstash
    state: started

- name: Copy filebeat conf file
  copy:
    src: filebeat.yml
    dest: /etc/filebeat
    owner: root
    group: root
    mode: '0400'

- name: Enable and start filebeat.service
  ansible.builtin.systemd:
    name: filebeat.service
    enabled: yes
    state: started

- name: Restart filebeat service
  ansible.builtin.systemd:
    name: filebeat
    state: restarted

- name: Copy filebeat Nginx module
  copy:
    src: nginx.yml
    dest: /etc/filebeat/modules.d/nginx.yml
    owner: root
    group: root
    mode: 0644

- name: Enable nginx module in filebeat
  ansible.builtin.command:
    cmd: "filebeat modules enable nginx"

- name: Restart filebeat service
  ansible.builtin.systemd:
    name: filebeat
    state: restarted

- name: Copy scripts folder to elk server
  ansible.builtin.copy:
    src: /mnt/nfs/bkp/elk/ubuntu02/scripts
    dest: /scripts/
    owner: root
    group: root
    mode: 0644
  run_once: true
...

---
- name: Include custom MySQL configuration
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf

- name: Restart_mysql_service
  service:
    name: mysql
    state: restarted

- name: Get master status
  command: >
    mysql -u root -p{{ mysql_root_password }} -e "SHOW MASTER STATUS;"
  register: master_status
  delegate_to: "{{ mysql_master_host }}"

- name: Debug master status
  debug:
    var: master_status.stdout_lines

- name: Copy master status from NFS
  ansible.builtin.copy:
    src: /mnt/nfs/tmp/master_status.txt
    dest: /tmp/
    remote_src: yes

- name: Read master log position
  ansible.builtin.set_fact:
    master_log_file: "{{ lookup('file', '/mnt/nfs/tmp/master_status.txt').split()[0] }}"
    master_log_pos: "{{ lookup('file', '/mnt/nfs/tmp/master_status.txt').split()[1] | int }}"

- name: Configure replication
  community.mysql.mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    mode: changemaster
    master_host: "{{ mysql_master_host }}"
    master_user: "{{ mysql_replication_user }}"
    master_password: "{{ mysql_replication_password }}"
    master_log_file: "{{ master_log_file }}"
    master_log_pos: "{{ master_log_pos }}"

- name: Preparing to start
  community.mysql.mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    mode: "{{ item }}"
  loop:
    - startslave
    - stopslave
    - resetslave

- name: Start replica
  community.mysql.mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    mode: startslave

- name: Wait for replication to initialize
  ansible.builtin.pause:
    seconds: 10

- name: Verify replication status
  community.mysql.mysql_replication:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    mode: getslave
  register: final_status

- name: Debug final status
  debug:
    var: final_status

...















































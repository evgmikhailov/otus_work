---
#MASTER
- name: Include custom MySQL configuration
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
  notify: Restart_mysql_service

- name: Create replication user for master
  mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    state: present

#- name: Fetch MySQL master status
#  mysql_replication:
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
#    mode: "getmaster"
#  register: mysql_master_status
#  delegate_to: ubuntu05
#  when: "'db_servers_master' in group_names"

- name: Get binary log position on Master
  shell: |
    mysql -u root -p{{ mysql_root_password }} -e "SHOW MASTER STATUS\G" | grep -E 'File|Position' | tr '\n' ' ' | awk '{print $2 " " $4}'
  register: master_status
  changed_when: false

- name: Save master status to a file
  copy:
    content: "{{ master_status.stdout }}"
    dest: /mnt/nfs/tmp/master_status.txt

- name: Restore files from backup
  ansible.builtin.copy:
    src: /mnt/nfs/bkp/mysql/ubuntu05/scripts/
    dest: /scripts/
    directory_mode: yes
    remote_src: yes

#- name: Fetch master_status
#  ansible.builtin.fetch:
#    src: "/tmp/master_status.txt"
#    dest: "/tmp/"
#    flat: yes
#  delegate_to: ubuntu05

#- name: Log MySQL master status
#  debug:
#    var: mysql_master_status
#  when:
#    - mysql_master_status is defined
#    - "'db_servers_master' in group_names"
...























































